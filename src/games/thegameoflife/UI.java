package games.thegameoflife;

import com.bulenkov.darcula.DarculaLaf;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import java.awt.*;

public class UI {


	private JPanel panel1;
	private static JFrame frame;

	private Life life;
	private Board board;
	private int resolution = 10;

	public static void main(String[] args) {

		try {
			UIManager.setLookAndFeel(new DarculaLaf());
		} catch (UnsupportedLookAndFeelException e) {
			e.printStackTrace();
		}

		frame = new JFrame("The Game Of Life");
		frame.setContentPane(new UI().panel1);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);

	}


	private void createUIComponents() {

		panel1 = new JPanel();
		panel1.setPreferredSize(new Dimension(1000, 700));
		//panel1.setMinimumSize(new Dimension(500, 500));

		JMenuBar menuBar = new JMenuBar();
		//TODO -- Save you current design to a file
		//TODO -- Load a design from a file
		//TODO
		JMenu menu = new JMenu("File");

		menu.add(new JMenuItem("Export"));
		menu.add(new JMenuItem("Load"));
		menu.add(new JMenuItem("something more??"));
		menuBar.add(menu);

		frame.setJMenuBar(menuBar);
		frame.add(panel1);
		frame.setResizable(false);

		//Setup board
		board = new Board(50, 50);
		life = new Life(board);

		frame.add(new Draw(), BorderLayout.CENTER);
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		createUIComponents();
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel1;
	}


	private class Draw extends JComponent {
		public void paint(Graphics g) {
			Graphics2D graph2 = (Graphics2D) g;

			graph2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
					RenderingHints.VALUE_ANTIALIAS_ON);

			graph2.setStroke(new BasicStroke(2));

			graph2.setPaint(Color.RED);
			for (int i = 0; i < board.getRow(); i += resolution) {
				for (int j = 0; j < board.getCol(); j += resolution) {
					graph2.drawRect(i, j, resolution, resolution);
					System.out.println("12323");
				}
			}
		}

	}

	private void drawBoard() {

	}
}
